package com.google.android.gms.internal.mlkit_common;

import com.google.firebase.encoders.FieldDescriptor;
import com.google.firebase.encoders.ObjectEncoder;
import com.google.firebase.encoders.ObjectEncoderContext;
import java.io.IOException;

/* compiled from: com.google.mlkit:common@@18.4.0 */
/* loaded from: classes.dex */
final class zzfb implements ObjectEncoder {
    private static final FieldDescriptor zzA;
    private static final FieldDescriptor zzB;
    private static final FieldDescriptor zzC;
    private static final FieldDescriptor zzD;
    private static final FieldDescriptor zzE;
    private static final FieldDescriptor zzF;
    private static final FieldDescriptor zzG;
    private static final FieldDescriptor zzH;
    private static final FieldDescriptor zzI;
    private static final FieldDescriptor zzJ;
    private static final FieldDescriptor zzK;
    private static final FieldDescriptor zzL;
    private static final FieldDescriptor zzM;
    private static final FieldDescriptor zzN;
    private static final FieldDescriptor zzO;
    private static final FieldDescriptor zzP;
    private static final FieldDescriptor zzQ;
    private static final FieldDescriptor zzR;
    private static final FieldDescriptor zzS;
    private static final FieldDescriptor zzT;
    private static final FieldDescriptor zzU;
    private static final FieldDescriptor zzV;
    private static final FieldDescriptor zzW;
    private static final FieldDescriptor zzX;
    private static final FieldDescriptor zzY;
    private static final FieldDescriptor zzZ;
    static final zzfb zza = new zzfb();
    private static final FieldDescriptor zzaa;
    private static final FieldDescriptor zzab;
    private static final FieldDescriptor zzac;
    private static final FieldDescriptor zzad;
    private static final FieldDescriptor zzae;
    private static final FieldDescriptor zzaf;
    private static final FieldDescriptor zzag;
    private static final FieldDescriptor zzah;
    private static final FieldDescriptor zzai;
    private static final FieldDescriptor zzaj;
    private static final FieldDescriptor zzak;
    private static final FieldDescriptor zzal;
    private static final FieldDescriptor zzam;
    private static final FieldDescriptor zzan;
    private static final FieldDescriptor zzao;
    private static final FieldDescriptor zzap;
    private static final FieldDescriptor zzaq;
    private static final FieldDescriptor zzar;
    private static final FieldDescriptor zzas;
    private static final FieldDescriptor zzat;
    private static final FieldDescriptor zzau;
    private static final FieldDescriptor zzav;
    private static final FieldDescriptor zzaw;
    private static final FieldDescriptor zzb;
    private static final FieldDescriptor zzc;
    private static final FieldDescriptor zzd;
    private static final FieldDescriptor zze;
    private static final FieldDescriptor zzf;
    private static final FieldDescriptor zzg;
    private static final FieldDescriptor zzh;
    private static final FieldDescriptor zzi;
    private static final FieldDescriptor zzj;
    private static final FieldDescriptor zzk;
    private static final FieldDescriptor zzl;
    private static final FieldDescriptor zzm;
    private static final FieldDescriptor zzn;
    private static final FieldDescriptor zzo;
    private static final FieldDescriptor zzp;
    private static final FieldDescriptor zzq;
    private static final FieldDescriptor zzr;
    private static final FieldDescriptor zzs;
    private static final FieldDescriptor zzt;
    private static final FieldDescriptor zzu;
    private static final FieldDescriptor zzv;
    private static final FieldDescriptor zzw;
    private static final FieldDescriptor zzx;
    private static final FieldDescriptor zzy;
    private static final FieldDescriptor zzz;

    static {
        FieldDescriptor.Builder builder = FieldDescriptor.builder("systemInfo");
        zzbf zzbfVar = new zzbf();
        zzbfVar.zza(1);
        zzb = builder.withProperty(zzbfVar.zzb()).build();
        FieldDescriptor.Builder builder2 = FieldDescriptor.builder("eventName");
        zzbf zzbfVar2 = new zzbf();
        zzbfVar2.zza(2);
        zzc = builder2.withProperty(zzbfVar2.zzb()).build();
        FieldDescriptor.Builder builder3 = FieldDescriptor.builder("isThickClient");
        zzbf zzbfVar3 = new zzbf();
        zzbfVar3.zza(37);
        zzd = builder3.withProperty(zzbfVar3.zzb()).build();
        FieldDescriptor.Builder builder4 = FieldDescriptor.builder("clientType");
        zzbf zzbfVar4 = new zzbf();
        zzbfVar4.zza(61);
        zze = builder4.withProperty(zzbfVar4.zzb()).build();
        FieldDescriptor.Builder builder5 = FieldDescriptor.builder("modelDownloadLogEvent");
        zzbf zzbfVar5 = new zzbf();
        zzbfVar5.zza(3);
        zzf = builder5.withProperty(zzbfVar5.zzb()).build();
        FieldDescriptor.Builder builder6 = FieldDescriptor.builder("customModelLoadLogEvent");
        zzbf zzbfVar6 = new zzbf();
        zzbfVar6.zza(20);
        zzg = builder6.withProperty(zzbfVar6.zzb()).build();
        FieldDescriptor.Builder builder7 = FieldDescriptor.builder("customModelInferenceLogEvent");
        zzbf zzbfVar7 = new zzbf();
        zzbfVar7.zza(4);
        zzh = builder7.withProperty(zzbfVar7.zzb()).build();
        FieldDescriptor.Builder builder8 = FieldDescriptor.builder("customModelCreateLogEvent");
        zzbf zzbfVar8 = new zzbf();
        zzbfVar8.zza(29);
        zzi = builder8.withProperty(zzbfVar8.zzb()).build();
        FieldDescriptor.Builder builder9 = FieldDescriptor.builder("onDeviceFaceDetectionLogEvent");
        zzbf zzbfVar9 = new zzbf();
        zzbfVar9.zza(5);
        zzj = builder9.withProperty(zzbfVar9.zzb()).build();
        FieldDescriptor.Builder builder10 = FieldDescriptor.builder("onDeviceFaceLoadLogEvent");
        zzbf zzbfVar10 = new zzbf();
        zzbfVar10.zza(59);
        zzk = builder10.withProperty(zzbfVar10.zzb()).build();
        FieldDescriptor.Builder builder11 = FieldDescriptor.builder("onDeviceTextDetectionLogEvent");
        zzbf zzbfVar11 = new zzbf();
        zzbfVar11.zza(6);
        zzl = builder11.withProperty(zzbfVar11.zzb()).build();
        FieldDescriptor.Builder builder12 = FieldDescriptor.builder("onDeviceBarcodeDetectionLogEvent");
        zzbf zzbfVar12 = new zzbf();
        zzbfVar12.zza(7);
        zzm = builder12.withProperty(zzbfVar12.zzb()).build();
        FieldDescriptor.Builder builder13 = FieldDescriptor.builder("onDeviceBarcodeLoadLogEvent");
        zzbf zzbfVar13 = new zzbf();
        zzbfVar13.zza(58);
        zzn = builder13.withProperty(zzbfVar13.zzb()).build();
        FieldDescriptor.Builder builder14 = FieldDescriptor.builder("onDeviceImageLabelCreateLogEvent");
        zzbf zzbfVar14 = new zzbf();
        zzbfVar14.zza(48);
        zzo = builder14.withProperty(zzbfVar14.zzb()).build();
        FieldDescriptor.Builder builder15 = FieldDescriptor.builder("onDeviceImageLabelLoadLogEvent");
        zzbf zzbfVar15 = new zzbf();
        zzbfVar15.zza(49);
        zzp = builder15.withProperty(zzbfVar15.zzb()).build();
        FieldDescriptor.Builder builder16 = FieldDescriptor.builder("onDeviceImageLabelDetectionLogEvent");
        zzbf zzbfVar16 = new zzbf();
        zzbfVar16.zza(18);
        zzq = builder16.withProperty(zzbfVar16.zzb()).build();
        FieldDescriptor.Builder builder17 = FieldDescriptor.builder("onDeviceObjectCreateLogEvent");
        zzbf zzbfVar17 = new zzbf();
        zzbfVar17.zza(26);
        zzr = builder17.withProperty(zzbfVar17.zzb()).build();
        FieldDescriptor.Builder builder18 = FieldDescriptor.builder("onDeviceObjectLoadLogEvent");
        zzbf zzbfVar18 = new zzbf();
        zzbfVar18.zza(27);
        zzs = builder18.withProperty(zzbfVar18.zzb()).build();
        FieldDescriptor.Builder builder19 = FieldDescriptor.builder("onDeviceObjectInferenceLogEvent");
        zzbf zzbfVar19 = new zzbf();
        zzbfVar19.zza(28);
        zzt = builder19.withProperty(zzbfVar19.zzb()).build();
        FieldDescriptor.Builder builder20 = FieldDescriptor.builder("onDevicePoseDetectionLogEvent");
        zzbf zzbfVar20 = new zzbf();
        zzbfVar20.zza(44);
        zzu = builder20.withProperty(zzbfVar20.zzb()).build();
        FieldDescriptor.Builder builder21 = FieldDescriptor.builder("onDeviceSegmentationLogEvent");
        zzbf zzbfVar21 = new zzbf();
        zzbfVar21.zza(45);
        zzv = builder21.withProperty(zzbfVar21.zzb()).build();
        FieldDescriptor.Builder builder22 = FieldDescriptor.builder("onDeviceSmartReplyLogEvent");
        zzbf zzbfVar22 = new zzbf();
        zzbfVar22.zza(19);
        zzw = builder22.withProperty(zzbfVar22.zzb()).build();
        FieldDescriptor.Builder builder23 = FieldDescriptor.builder("onDeviceLanguageIdentificationLogEvent");
        zzbf zzbfVar23 = new zzbf();
        zzbfVar23.zza(21);
        zzx = builder23.withProperty(zzbfVar23.zzb()).build();
        FieldDescriptor.Builder builder24 = FieldDescriptor.builder("onDeviceTranslationLogEvent");
        zzbf zzbfVar24 = new zzbf();
        zzbfVar24.zza(22);
        zzy = builder24.withProperty(zzbfVar24.zzb()).build();
        FieldDescriptor.Builder builder25 = FieldDescriptor.builder("cloudFaceDetectionLogEvent");
        zzbf zzbfVar25 = new zzbf();
        zzbfVar25.zza(8);
        zzz = builder25.withProperty(zzbfVar25.zzb()).build();
        FieldDescriptor.Builder builder26 = FieldDescriptor.builder("cloudCropHintDetectionLogEvent");
        zzbf zzbfVar26 = new zzbf();
        zzbfVar26.zza(9);
        zzA = builder26.withProperty(zzbfVar26.zzb()).build();
        FieldDescriptor.Builder builder27 = FieldDescriptor.builder("cloudDocumentTextDetectionLogEvent");
        zzbf zzbfVar27 = new zzbf();
        zzbfVar27.zza(10);
        zzB = builder27.withProperty(zzbfVar27.zzb()).build();
        FieldDescriptor.Builder builder28 = FieldDescriptor.builder("cloudImagePropertiesDetectionLogEvent");
        zzbf zzbfVar28 = new zzbf();
        zzbfVar28.zza(11);
        zzC = builder28.withProperty(zzbfVar28.zzb()).build();
        FieldDescriptor.Builder builder29 = FieldDescriptor.builder("cloudImageLabelDetectionLogEvent");
        zzbf zzbfVar29 = new zzbf();
        zzbfVar29.zza(12);
        zzD = builder29.withProperty(zzbfVar29.zzb()).build();
        FieldDescriptor.Builder builder30 = FieldDescriptor.builder("cloudLandmarkDetectionLogEvent");
        zzbf zzbfVar30 = new zzbf();
        zzbfVar30.zza(13);
        zzE = builder30.withProperty(zzbfVar30.zzb()).build();
        FieldDescriptor.Builder builder31 = FieldDescriptor.builder("cloudLogoDetectionLogEvent");
        zzbf zzbfVar31 = new zzbf();
        zzbfVar31.zza(14);
        zzF = builder31.withProperty(zzbfVar31.zzb()).build();
        FieldDescriptor.Builder builder32 = FieldDescriptor.builder("cloudSafeSearchDetectionLogEvent");
        zzbf zzbfVar32 = new zzbf();
        zzbfVar32.zza(15);
        zzG = builder32.withProperty(zzbfVar32.zzb()).build();
        FieldDescriptor.Builder builder33 = FieldDescriptor.builder("cloudTextDetectionLogEvent");
        zzbf zzbfVar33 = new zzbf();
        zzbfVar33.zza(16);
        zzH = builder33.withProperty(zzbfVar33.zzb()).build();
        FieldDescriptor.Builder builder34 = FieldDescriptor.builder("cloudWebSearchDetectionLogEvent");
        zzbf zzbfVar34 = new zzbf();
        zzbfVar34.zza(17);
        zzI = builder34.withProperty(zzbfVar34.zzb()).build();
        FieldDescriptor.Builder builder35 = FieldDescriptor.builder("automlImageLabelingCreateLogEvent");
        zzbf zzbfVar35 = new zzbf();
        zzbfVar35.zza(23);
        zzJ = builder35.withProperty(zzbfVar35.zzb()).build();
        FieldDescriptor.Builder builder36 = FieldDescriptor.builder("automlImageLabelingLoadLogEvent");
        zzbf zzbfVar36 = new zzbf();
        zzbfVar36.zza(24);
        zzK = builder36.withProperty(zzbfVar36.zzb()).build();
        FieldDescriptor.Builder builder37 = FieldDescriptor.builder("automlImageLabelingInferenceLogEvent");
        zzbf zzbfVar37 = new zzbf();
        zzbfVar37.zza(25);
        zzL = builder37.withProperty(zzbfVar37.zzb()).build();
        FieldDescriptor.Builder builder38 = FieldDescriptor.builder("isModelDownloadedLogEvent");
        zzbf zzbfVar38 = new zzbf();
        zzbfVar38.zza(39);
        zzM = builder38.withProperty(zzbfVar38.zzb()).build();
        FieldDescriptor.Builder builder39 = FieldDescriptor.builder("deleteModelLogEvent");
        zzbf zzbfVar39 = new zzbf();
        zzbfVar39.zza(40);
        zzN = builder39.withProperty(zzbfVar39.zzb()).build();
        FieldDescriptor.Builder builder40 = FieldDescriptor.builder("aggregatedAutomlImageLabelingInferenceLogEvent");
        zzbf zzbfVar40 = new zzbf();
        zzbfVar40.zza(30);
        zzO = builder40.withProperty(zzbfVar40.zzb()).build();
        FieldDescriptor.Builder builder41 = FieldDescriptor.builder("aggregatedCustomModelInferenceLogEvent");
        zzbf zzbfVar41 = new zzbf();
        zzbfVar41.zza(31);
        zzP = builder41.withProperty(zzbfVar41.zzb()).build();
        FieldDescriptor.Builder builder42 = FieldDescriptor.builder("aggregatedOnDeviceFaceDetectionLogEvent");
        zzbf zzbfVar42 = new zzbf();
        zzbfVar42.zza(32);
        zzQ = builder42.withProperty(zzbfVar42.zzb()).build();
        FieldDescriptor.Builder builder43 = FieldDescriptor.builder("aggregatedOnDeviceBarcodeDetectionLogEvent");
        zzbf zzbfVar43 = new zzbf();
        zzbfVar43.zza(33);
        zzR = builder43.withProperty(zzbfVar43.zzb()).build();
        FieldDescriptor.Builder builder44 = FieldDescriptor.builder("aggregatedOnDeviceImageLabelDetectionLogEvent");
        zzbf zzbfVar44 = new zzbf();
        zzbfVar44.zza(34);
        zzS = builder44.withProperty(zzbfVar44.zzb()).build();
        FieldDescriptor.Builder builder45 = FieldDescriptor.builder("aggregatedOnDeviceObjectInferenceLogEvent");
        zzbf zzbfVar45 = new zzbf();
        zzbfVar45.zza(35);
        zzT = builder45.withProperty(zzbfVar45.zzb()).build();
        FieldDescriptor.Builder builder46 = FieldDescriptor.builder("aggregatedOnDeviceTextDetectionLogEvent");
        zzbf zzbfVar46 = new zzbf();
        zzbfVar46.zza(36);
        zzU = builder46.withProperty(zzbfVar46.zzb()).build();
        FieldDescriptor.Builder builder47 = FieldDescriptor.builder("aggregatedOnDevicePoseDetectionLogEvent");
        zzbf zzbfVar47 = new zzbf();
        zzbfVar47.zza(46);
        zzV = builder47.withProperty(zzbfVar47.zzb()).build();
        FieldDescriptor.Builder builder48 = FieldDescriptor.builder("aggregatedOnDeviceSegmentationLogEvent");
        zzbf zzbfVar48 = new zzbf();
        zzbfVar48.zza(47);
        zzW = builder48.withProperty(zzbfVar48.zzb()).build();
        FieldDescriptor.Builder builder49 = FieldDescriptor.builder("pipelineAccelerationInferenceEvents");
        zzbf zzbfVar49 = new zzbf();
        zzbfVar49.zza(69);
        zzX = builder49.withProperty(zzbfVar49.zzb()).build();
        FieldDescriptor.Builder builder50 = FieldDescriptor.builder("remoteConfigLogEvent");
        zzbf zzbfVar50 = new zzbf();
        zzbfVar50.zza(42);
        zzY = builder50.withProperty(zzbfVar50.zzb()).build();
        FieldDescriptor.Builder builder51 = FieldDescriptor.builder("inputImageConstructionLogEvent");
        zzbf zzbfVar51 = new zzbf();
        zzbfVar51.zza(50);
        zzZ = builder51.withProperty(zzbfVar51.zzb()).build();
        FieldDescriptor.Builder builder52 = FieldDescriptor.builder("leakedHandleEvent");
        zzbf zzbfVar52 = new zzbf();
        zzbfVar52.zza(51);
        zzaa = builder52.withProperty(zzbfVar52.zzb()).build();
        FieldDescriptor.Builder builder53 = FieldDescriptor.builder("cameraSourceLogEvent");
        zzbf zzbfVar53 = new zzbf();
        zzbfVar53.zza(52);
        zzab = builder53.withProperty(zzbfVar53.zzb()).build();
        FieldDescriptor.Builder builder54 = FieldDescriptor.builder("imageLabelOptionalModuleLogEvent");
        zzbf zzbfVar54 = new zzbf();
        zzbfVar54.zza(53);
        zzac = builder54.withProperty(zzbfVar54.zzb()).build();
        FieldDescriptor.Builder builder55 = FieldDescriptor.builder("languageIdentificationOptionalModuleLogEvent");
        zzbf zzbfVar55 = new zzbf();
        zzbfVar55.zza(54);
        zzad = builder55.withProperty(zzbfVar55.zzb()).build();
        FieldDescriptor.Builder builder56 = FieldDescriptor.builder("faceDetectionOptionalModuleLogEvent");
        zzbf zzbfVar56 = new zzbf();
        zzbfVar56.zza(60);
        zzae = builder56.withProperty(zzbfVar56.zzb()).build();
        FieldDescriptor.Builder builder57 = FieldDescriptor.builder("nlClassifierOptionalModuleLogEvent");
        zzbf zzbfVar57 = new zzbf();
        zzbfVar57.zza(55);
        zzaf = builder57.withProperty(zzbfVar57.zzb()).build();
        FieldDescriptor.Builder builder58 = FieldDescriptor.builder("nlClassifierClientLibraryLogEvent");
        zzbf zzbfVar58 = new zzbf();
        zzbfVar58.zza(56);
        zzag = builder58.withProperty(zzbfVar58.zzb()).build();
        FieldDescriptor.Builder builder59 = FieldDescriptor.builder("accelerationAllowlistLogEvent");
        zzbf zzbfVar59 = new zzbf();
        zzbfVar59.zza(57);
        zzah = builder59.withProperty(zzbfVar59.zzb()).build();
        FieldDescriptor.Builder builder60 = FieldDescriptor.builder("toxicityDetectionCreateEvent");
        zzbf zzbfVar60 = new zzbf();
        zzbfVar60.zza(62);
        zzai = builder60.withProperty(zzbfVar60.zzb()).build();
        FieldDescriptor.Builder builder61 = FieldDescriptor.builder("toxicityDetectionLoadEvent");
        zzbf zzbfVar61 = new zzbf();
        zzbfVar61.zza(63);
        zzaj = builder61.withProperty(zzbfVar61.zzb()).build();
        FieldDescriptor.Builder builder62 = FieldDescriptor.builder("toxicityDetectionInferenceEvent");
        zzbf zzbfVar62 = new zzbf();
        zzbfVar62.zza(64);
        zzak = builder62.withProperty(zzbfVar62.zzb()).build();
        FieldDescriptor.Builder builder63 = FieldDescriptor.builder("barcodeDetectionOptionalModuleLogEvent");
        zzbf zzbfVar63 = new zzbf();
        zzbfVar63.zza(65);
        zzal = builder63.withProperty(zzbfVar63.zzb()).build();
        FieldDescriptor.Builder builder64 = FieldDescriptor.builder("customImageLabelOptionalModuleLogEvent");
        zzbf zzbfVar64 = new zzbf();
        zzbfVar64.zza(66);
        zzam = builder64.withProperty(zzbfVar64.zzb()).build();
        FieldDescriptor.Builder builder65 = FieldDescriptor.builder("codeScannerScanApiEvent");
        zzbf zzbfVar65 = new zzbf();
        zzbfVar65.zza(67);
        zzan = builder65.withProperty(zzbfVar65.zzb()).build();
        FieldDescriptor.Builder builder66 = FieldDescriptor.builder("codeScannerOptionalModuleEvent");
        zzbf zzbfVar66 = new zzbf();
        zzbfVar66.zza(68);
        zzao = builder66.withProperty(zzbfVar66.zzb()).build();
        FieldDescriptor.Builder builder67 = FieldDescriptor.builder("onDeviceExplicitContentCreateLogEvent");
        zzbf zzbfVar67 = new zzbf();
        zzbfVar67.zza(70);
        zzap = builder67.withProperty(zzbfVar67.zzb()).build();
        FieldDescriptor.Builder builder68 = FieldDescriptor.builder("onDeviceExplicitContentLoadLogEvent");
        zzbf zzbfVar68 = new zzbf();
        zzbfVar68.zza(71);
        zzaq = builder68.withProperty(zzbfVar68.zzb()).build();
        FieldDescriptor.Builder builder69 = FieldDescriptor.builder("onDeviceExplicitContentInferenceLogEvent");
        zzbf zzbfVar69 = new zzbf();
        zzbfVar69.zza(72);
        zzar = builder69.withProperty(zzbfVar69.zzb()).build();
        FieldDescriptor.Builder builder70 = FieldDescriptor.builder("aggregatedOnDeviceExplicitContentLogEvent");
        zzbf zzbfVar70 = new zzbf();
        zzbfVar70.zza(73);
        zzas = builder70.withProperty(zzbfVar70.zzb()).build();
        FieldDescriptor.Builder builder71 = FieldDescriptor.builder("onDeviceSelfieFaceCreateLogEvent");
        zzbf zzbfVar71 = new zzbf();
        zzbfVar71.zza(74);
        zzat = builder71.withProperty(zzbfVar71.zzb()).build();
        FieldDescriptor.Builder builder72 = FieldDescriptor.builder("onDeviceSelfieFaceLoadLogEvent");
        zzbf zzbfVar72 = new zzbf();
        zzbfVar72.zza(75);
        zzau = builder72.withProperty(zzbfVar72.zzb()).build();
        FieldDescriptor.Builder builder73 = FieldDescriptor.builder("onDeviceSelfieFaceLogEvent");
        zzbf zzbfVar73 = new zzbf();
        zzbfVar73.zza(76);
        zzav = builder73.withProperty(zzbfVar73.zzb()).build();
        FieldDescriptor.Builder builder74 = FieldDescriptor.builder("aggregatedOnDeviceSelfieFaceLogEvent");
        zzbf zzbfVar74 = new zzbf();
        zzbfVar74.zza(77);
        zzaw = builder74.withProperty(zzbfVar74.zzb()).build();
    }

    private zzfb() {
    }

    @Override // com.google.firebase.encoders.Encoder
    public final /* bridge */ /* synthetic */ void encode(Object obj, ObjectEncoderContext objectEncoderContext) throws IOException {
        zzix zzixVar = (zzix) obj;
        ObjectEncoderContext objectEncoderContext2 = objectEncoderContext;
        objectEncoderContext2.add(zzb, zzixVar.zzf());
        objectEncoderContext2.add(zzc, zzixVar.zzd());
        objectEncoderContext2.add(zzd, (Object) null);
        objectEncoderContext2.add(zze, (Object) null);
        objectEncoderContext2.add(zzf, zzixVar.zze());
        objectEncoderContext2.add(zzg, (Object) null);
        objectEncoderContext2.add(zzh, (Object) null);
        objectEncoderContext2.add(zzi, (Object) null);
        objectEncoderContext2.add(zzj, (Object) null);
        objectEncoderContext2.add(zzk, (Object) null);
        objectEncoderContext2.add(zzl, (Object) null);
        objectEncoderContext2.add(zzm, (Object) null);
        objectEncoderContext2.add(zzn, (Object) null);
        objectEncoderContext2.add(zzo, (Object) null);
        objectEncoderContext2.add(zzp, (Object) null);
        objectEncoderContext2.add(zzq, (Object) null);
        objectEncoderContext2.add(zzr, (Object) null);
        objectEncoderContext2.add(zzs, (Object) null);
        objectEncoderContext2.add(zzt, (Object) null);
        objectEncoderContext2.add(zzu, (Object) null);
        objectEncoderContext2.add(zzv, (Object) null);
        objectEncoderContext2.add(zzw, (Object) null);
        objectEncoderContext2.add(zzx, (Object) null);
        objectEncoderContext2.add(zzy, (Object) null);
        objectEncoderContext2.add(zzz, (Object) null);
        objectEncoderContext2.add(zzA, (Object) null);
        objectEncoderContext2.add(zzB, (Object) null);
        objectEncoderContext2.add(zzC, (Object) null);
        objectEncoderContext2.add(zzD, (Object) null);
        objectEncoderContext2.add(zzE, (Object) null);
        objectEncoderContext2.add(zzF, (Object) null);
        objectEncoderContext2.add(zzG, (Object) null);
        objectEncoderContext2.add(zzH, (Object) null);
        objectEncoderContext2.add(zzI, (Object) null);
        objectEncoderContext2.add(zzJ, (Object) null);
        objectEncoderContext2.add(zzK, (Object) null);
        objectEncoderContext2.add(zzL, (Object) null);
        objectEncoderContext2.add(zzM, zzixVar.zzb());
        objectEncoderContext2.add(zzN, zzixVar.zza());
        objectEncoderContext2.add(zzO, (Object) null);
        objectEncoderContext2.add(zzP, (Object) null);
        objectEncoderContext2.add(zzQ, (Object) null);
        objectEncoderContext2.add(zzR, (Object) null);
        objectEncoderContext2.add(zzS, (Object) null);
        objectEncoderContext2.add(zzT, (Object) null);
        objectEncoderContext2.add(zzU, (Object) null);
        objectEncoderContext2.add(zzV, (Object) null);
        objectEncoderContext2.add(zzW, (Object) null);
        objectEncoderContext2.add(zzX, (Object) null);
        objectEncoderContext2.add(zzY, (Object) null);
        objectEncoderContext2.add(zzZ, (Object) null);
        objectEncoderContext2.add(zzaa, zzixVar.zzc());
        objectEncoderContext2.add(zzab, (Object) null);
        objectEncoderContext2.add(zzac, (Object) null);
        objectEncoderContext2.add(zzad, (Object) null);
        objectEncoderContext2.add(zzae, (Object) null);
        objectEncoderContext2.add(zzaf, (Object) null);
        objectEncoderContext2.add(zzag, (Object) null);
        objectEncoderContext2.add(zzah, (Object) null);
        objectEncoderContext2.add(zzai, (Object) null);
        objectEncoderContext2.add(zzaj, (Object) null);
        objectEncoderContext2.add(zzak, (Object) null);
        objectEncoderContext2.add(zzal, (Object) null);
        objectEncoderContext2.add(zzam, (Object) null);
        objectEncoderContext2.add(zzan, (Object) null);
        objectEncoderContext2.add(zzao, (Object) null);
        objectEncoderContext2.add(zzap, (Object) null);
        objectEncoderContext2.add(zzaq, (Object) null);
        objectEncoderContext2.add(zzar, (Object) null);
        objectEncoderContext2.add(zzas, (Object) null);
        objectEncoderContext2.add(zzat, (Object) null);
        objectEncoderContext2.add(zzau, (Object) null);
        objectEncoderContext2.add(zzav, (Object) null);
        objectEncoderContext2.add(zzaw, (Object) null);
    }
}
