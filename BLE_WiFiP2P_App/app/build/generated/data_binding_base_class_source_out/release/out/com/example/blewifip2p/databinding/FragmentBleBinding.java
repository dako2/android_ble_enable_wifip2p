// Generated by view binder compiler. Do not edit!
package com.example.blewifip2p.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.core.widget.NestedScrollView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.blewifip2p.R;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentBleBinding implements ViewBinding {
  @NonNull
  private final NestedScrollView rootView;

  @NonNull
  public final MaterialButton btnBattery;

  @NonNull
  public final MaterialButton btnCamera;

  @NonNull
  public final MaterialButton btnConnect;

  @NonNull
  public final MaterialButton btnDisconnect;

  @NonNull
  public final MaterialButton btnRecord;

  @NonNull
  public final MaterialButton btnScan;

  @NonNull
  public final MaterialButton btnVideo;

  @NonNull
  public final MaterialButton btnVolume;

  @NonNull
  public final RecyclerView rvDevices;

  @NonNull
  public final TextView tvBatteryInfo;

  @NonNull
  public final TextView tvDeviceInfo;

  @NonNull
  public final TextView tvNoDevices;

  private FragmentBleBinding(@NonNull NestedScrollView rootView, @NonNull MaterialButton btnBattery,
      @NonNull MaterialButton btnCamera, @NonNull MaterialButton btnConnect,
      @NonNull MaterialButton btnDisconnect, @NonNull MaterialButton btnRecord,
      @NonNull MaterialButton btnScan, @NonNull MaterialButton btnVideo,
      @NonNull MaterialButton btnVolume, @NonNull RecyclerView rvDevices,
      @NonNull TextView tvBatteryInfo, @NonNull TextView tvDeviceInfo,
      @NonNull TextView tvNoDevices) {
    this.rootView = rootView;
    this.btnBattery = btnBattery;
    this.btnCamera = btnCamera;
    this.btnConnect = btnConnect;
    this.btnDisconnect = btnDisconnect;
    this.btnRecord = btnRecord;
    this.btnScan = btnScan;
    this.btnVideo = btnVideo;
    this.btnVolume = btnVolume;
    this.rvDevices = rvDevices;
    this.tvBatteryInfo = tvBatteryInfo;
    this.tvDeviceInfo = tvDeviceInfo;
    this.tvNoDevices = tvNoDevices;
  }

  @Override
  @NonNull
  public NestedScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentBleBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentBleBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_ble, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentBleBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnBattery;
      MaterialButton btnBattery = ViewBindings.findChildViewById(rootView, id);
      if (btnBattery == null) {
        break missingId;
      }

      id = R.id.btnCamera;
      MaterialButton btnCamera = ViewBindings.findChildViewById(rootView, id);
      if (btnCamera == null) {
        break missingId;
      }

      id = R.id.btnConnect;
      MaterialButton btnConnect = ViewBindings.findChildViewById(rootView, id);
      if (btnConnect == null) {
        break missingId;
      }

      id = R.id.btnDisconnect;
      MaterialButton btnDisconnect = ViewBindings.findChildViewById(rootView, id);
      if (btnDisconnect == null) {
        break missingId;
      }

      id = R.id.btnRecord;
      MaterialButton btnRecord = ViewBindings.findChildViewById(rootView, id);
      if (btnRecord == null) {
        break missingId;
      }

      id = R.id.btnScan;
      MaterialButton btnScan = ViewBindings.findChildViewById(rootView, id);
      if (btnScan == null) {
        break missingId;
      }

      id = R.id.btnVideo;
      MaterialButton btnVideo = ViewBindings.findChildViewById(rootView, id);
      if (btnVideo == null) {
        break missingId;
      }

      id = R.id.btnVolume;
      MaterialButton btnVolume = ViewBindings.findChildViewById(rootView, id);
      if (btnVolume == null) {
        break missingId;
      }

      id = R.id.rvDevices;
      RecyclerView rvDevices = ViewBindings.findChildViewById(rootView, id);
      if (rvDevices == null) {
        break missingId;
      }

      id = R.id.tvBatteryInfo;
      TextView tvBatteryInfo = ViewBindings.findChildViewById(rootView, id);
      if (tvBatteryInfo == null) {
        break missingId;
      }

      id = R.id.tvDeviceInfo;
      TextView tvDeviceInfo = ViewBindings.findChildViewById(rootView, id);
      if (tvDeviceInfo == null) {
        break missingId;
      }

      id = R.id.tvNoDevices;
      TextView tvNoDevices = ViewBindings.findChildViewById(rootView, id);
      if (tvNoDevices == null) {
        break missingId;
      }

      return new FragmentBleBinding((NestedScrollView) rootView, btnBattery, btnCamera, btnConnect,
          btnDisconnect, btnRecord, btnScan, btnVideo, btnVolume, rvDevices, tvBatteryInfo,
          tvDeviceInfo, tvNoDevices);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
